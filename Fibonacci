//recursive approach

public class Fibonacci {
    public static int fibonacciRecursive(int n) {
        if (n <= 1) {
            return n;
        } else {
            return fibonacciRecursive(n - 1) + fibonacciRecursive(n - 2);
        }
    }

    public static void main(String[] args) {
        int n = 10; // Fibonacci sequence index
        System.out.println("Fibonacci (recursive) at position " + n + ": " + fibonacciRecursive(n));
    }
}


// iterative approach


public class Fibonacci {
    public static int fibonacciIterative(int n) {
        if (n <= 1) {
            return n;
        }
        int a = 0, b = 1;
        for (int i = 2; i <= n; i++) {
            int temp = a + b;
            a = b;
            b = temp;
        }
        return b;
    }

    public static void main(String[] args) {
        int n = 10; // Fibonacci sequence index
        System.out.println("Fibonacci (iterative) at position " + n + ": " + fibonacciIterative(n));
    }
}
